#!/usr/bin/env bash -e

DIR="/Volumes/keys"
KEY="$DIR/id_rsa"

delete_ids='false'
hours='10'

if [ "$(uname -s)" != 'Darwin' ]; then
  echo "(!) This script has only been tested on OS X machines; aborting..."
  exit
fi

print_help() { cat <<HELP
Usage: $script_name [-t time_in_hours] [-d delete_identities_on_machine]

Loads your SSH key for 10 hours or time specified and (force) ejects the volume.

Using a pairing machine?
Consider deleting all identities on the machine (-d) before loading the new key.

Example usage:
  *Insert USB that contains an SSH key and this script*
  /Volumes/keys/load -t 8
  *Unplug USB and code for 8 hours*
HELP
}

while getopts 'dt:h' flag; do
  case "${flag}" in
    d) delete_ids='true' ;;
    t) hours="${OPTARG}" ;;
    h) print_help; exit ;;
    *) print_help; exit ;;
  esac
done

if [ "$delete_ids" = 'true' ]; then
  /usr/bin/ssh-add -D
fi

/usr/bin/ssh-add -t ${hours}H $KEY

if [ $? -eq 0 ]; then
  /usr/sbin/diskutil umount force $DIR
else
  echo "Could not add the identity. Please try again."
fi
